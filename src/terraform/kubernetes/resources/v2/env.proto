syntax = "proto3";

// Provider: kubernetes 2.20.0
package terraform.kubernetes.resources.v2;

import "terraform/v1/meta.proto";

// KubernetesEnv version is 0
message KubernetesEnv {
  // Resource API version
  string api_version = 1 [json_name = "api_version"];

  // Name of the container for which we are updating the environment variables.
  string container = 2;

  // Set the name of the field manager for the specified environment variables.
  string field_manager = 3 [json_name = "field_manager"];

  // Force overwriting environments that were created or edited outside of Terraform.
  bool force = 4;

  string id = 5;

  // Name of the initContainer for which we are updating the environment variables.
  string init_container = 6 [json_name = "init_container"];

  // Resource Kind
  string kind = 7;

  repeated Env env = 8;

  Metadata metadata = 9;

  map<string, string> for_each = 10 [json_name = "for_each"];

  repeated string depends_on = 11 [json_name = "depends_on"];

  int32 count = 12;

  string provider = 13;

  terraform.v1.Lifecycle lifecycle = 14;

  message Env {
    // Name of the environment variable. Must be a C_IDENTIFIER
    string name = 1;

    // Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    string value = 2;

    ValueFrom value_from = 3 [json_name = "value_from"];

    message ValueFrom {
      ConfigMapKeyRef config_map_key_ref = 1 [json_name = "config_map_key_ref"];

      FieldRef field_ref = 2 [json_name = "field_ref"];

      ResourceFieldRef resource_field_ref = 3 [json_name = "resource_field_ref"];

      SecretKeyRef secret_key_ref = 4 [json_name = "secret_key_ref"];

      message ConfigMapKeyRef {
        // The key to select.
        string key = 1;

        // Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names
        string name = 2;

        // Specify whether the ConfigMap or its key must be defined.
        bool optional = 3;
      }

      message FieldRef {
        // Version of the schema the FieldPath is written in terms of, defaults to "v1".
        string api_version = 1 [json_name = "api_version"];

        // Path of the field to select in the specified API version
        string field_path = 2 [json_name = "field_path"];
      }

      message ResourceFieldRef {
        string container_name = 1 [json_name = "container_name"];

        string divisor = 2;

        // Resource to select
        string resource = 3;
      }

      message SecretKeyRef {
        // The key of the secret to select from. Must be a valid secret key.
        string key = 1;

        // Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names
        string name = 2;

        // Specify whether the Secret or its key must be defined.
        bool optional = 3;
      }
    }
  }

  message Metadata {
    // The name of the resource.
    string name = 1;

    // The namespace of the resource.
    string namespace = 2;
  }
}
