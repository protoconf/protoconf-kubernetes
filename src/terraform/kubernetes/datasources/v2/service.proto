syntax = "proto3";

// Provider: kubernetes 2.20.0
package terraform.kubernetes.datasources.v2;

import "terraform/v1/meta.proto";

// KubernetesService version is 0
message KubernetesService {
  string id = 1;

  // Spec defines the behavior of a service. https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
  repeated Spec spec = 2;

  repeated Status status = 3;

  Metadata metadata = 4;

  map<string, string> for_each = 5 [json_name = "for_each"];

  repeated string depends_on = 6 [json_name = "depends_on"];

  int32 count = 7;

  string provider = 8;

  terraform.v1.Lifecycle lifecycle = 9;

  message Spec {
    // allocate_load_balancer_node_ports: bool
    bool allocate_load_balancer_node_ports = 1 [json_name = "allocate_load_balancer_node_ports"];

    // cluster_ip: string
    string cluster_ip = 2 [json_name = "cluster_ip"];

    // cluster_ips: list of string
    repeated string cluster_ips = 3 [json_name = "cluster_ips"];

    // external_ips: set of string
    repeated string external_ips = 4 [json_name = "external_ips"];

    // external_name: string
    string external_name = 5 [json_name = "external_name"];

    // external_traffic_policy: string
    string external_traffic_policy = 6 [json_name = "external_traffic_policy"];

    // health_check_node_port: number
    int64 health_check_node_port = 7 [json_name = "health_check_node_port"];

    // internal_traffic_policy: string
    string internal_traffic_policy = 8 [json_name = "internal_traffic_policy"];

    // ip_families: list of string
    repeated string ip_families = 9 [json_name = "ip_families"];

    // ip_family_policy: string
    string ip_family_policy = 10 [json_name = "ip_family_policy"];

    // load_balancer_class: string
    string load_balancer_class = 11 [json_name = "load_balancer_class"];

    // load_balancer_ip: string
    string load_balancer_ip = 12 [json_name = "load_balancer_ip"];

    // load_balancer_source_ranges: set of string
    repeated string load_balancer_source_ranges = 13 [json_name = "load_balancer_source_ranges"];

    // port: list of object
    repeated Port port = 14;

    // publish_not_ready_addresses: bool
    bool publish_not_ready_addresses = 15 [json_name = "publish_not_ready_addresses"];

    // selector: map of string
    map<string, string> selector = 16;

    // session_affinity: string
    string session_affinity = 17 [json_name = "session_affinity"];

    // session_affinity_config: list of object
    repeated SessionAffinityConfig session_affinity_config = 18 [json_name = "session_affinity_config"];

    // type: string
    string type = 19;

    message Port {
      // app_protocol: string
      string app_protocol = 1 [json_name = "app_protocol"];

      // name: string
      string name = 2;

      // node_port: number
      int64 node_port = 3 [json_name = "node_port"];

      // port: number
      int64 port = 4;

      // protocol: string
      string protocol = 5;

      // target_port: string
      string target_port = 6 [json_name = "target_port"];
    }

    message SessionAffinityConfig {
      // client_ip: list of object
      repeated ClientIp client_ip = 1 [json_name = "client_ip"];

      message ClientIp {
        // timeout_seconds: number
        int64 timeout_seconds = 1 [json_name = "timeout_seconds"];
      }
    }
  }

  message Status {
    // load_balancer: list of object
    repeated LoadBalancer load_balancer = 1 [json_name = "load_balancer"];

    message LoadBalancer {
      // ingress: list of object
      repeated Ingress ingress = 1;

      message Ingress {
        // hostname: string
        string hostname = 1;

        // ip: string
        string ip = 2;
      }
    }
  }

  message Metadata {
    // An unstructured key value map stored with the service that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
    map<string, string> annotations = 1;

    // A sequence number representing a specific generation of the desired state.
    int64 generation = 2;

    // Map of string keys and values that can be used to organize and categorize (scope and select) the service. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    map<string, string> labels = 3;

    // Name of the service, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    string name = 4;

    // Namespace defines the space within which name of the service must be unique.
    string namespace = 5;

    // An opaque value that represents the internal version of this service that can be used by clients to determine when service has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    string resource_version = 6 [json_name = "resource_version"];

    // The unique in time and space value for this service. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    string uid = 7;
  }
}

// KubernetesServiceAccount version is 0
message KubernetesServiceAccount {
  // True to enable automatic mounting of the service account token
  bool automount_service_account_token = 1 [json_name = "automount_service_account_token"];

  string default_secret_name = 2 [json_name = "default_secret_name"];

  string id = 3;

  // A list of references to secrets in the same namespace to use for pulling any images in pods that reference this Service Account. More info: http://kubernetes.io/docs/user-guide/secrets#manually-specifying-an-imagepullsecret
  repeated ImagePullSecret image_pull_secret = 4 [json_name = "image_pull_secret"];

  // A list of secrets allowed to be used by pods running using this Service Account. More info: http://kubernetes.io/docs/user-guide/secrets
  repeated Secret secret = 5;

  Metadata metadata = 6;

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;

  message ImagePullSecret {
    // name: string
    string name = 1;
  }

  message Secret {
    // name: string
    string name = 1;
  }

  message Metadata {
    // An unstructured key value map stored with the service account that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
    map<string, string> annotations = 1;

    // A sequence number representing a specific generation of the desired state.
    int64 generation = 2;

    // Map of string keys and values that can be used to organize and categorize (scope and select) the service account. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    map<string, string> labels = 3;

    // Name of the service account, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    string name = 4;

    // Namespace defines the space within which name of the service account must be unique.
    string namespace = 5;

    // An opaque value that represents the internal version of this service account that can be used by clients to determine when service account has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    string resource_version = 6 [json_name = "resource_version"];

    // The unique in time and space value for this service account. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    string uid = 7;
  }
}

// KubernetesServiceAccountV1 version is 0
message KubernetesServiceAccountV1 {
  // True to enable automatic mounting of the service account token
  bool automount_service_account_token = 1 [json_name = "automount_service_account_token"];

  string default_secret_name = 2 [json_name = "default_secret_name"];

  string id = 3;

  // A list of references to secrets in the same namespace to use for pulling any images in pods that reference this Service Account. More info: http://kubernetes.io/docs/user-guide/secrets#manually-specifying-an-imagepullsecret
  repeated ImagePullSecret image_pull_secret = 4 [json_name = "image_pull_secret"];

  // A list of secrets allowed to be used by pods running using this Service Account. More info: http://kubernetes.io/docs/user-guide/secrets
  repeated Secret secret = 5;

  Metadata metadata = 6;

  map<string, string> for_each = 7 [json_name = "for_each"];

  repeated string depends_on = 8 [json_name = "depends_on"];

  int32 count = 9;

  string provider = 10;

  terraform.v1.Lifecycle lifecycle = 11;

  message ImagePullSecret {
    // name: string
    string name = 1;
  }

  message Secret {
    // name: string
    string name = 1;
  }

  message Metadata {
    // An unstructured key value map stored with the service account that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
    map<string, string> annotations = 1;

    // A sequence number representing a specific generation of the desired state.
    int64 generation = 2;

    // Map of string keys and values that can be used to organize and categorize (scope and select) the service account. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    map<string, string> labels = 3;

    // Name of the service account, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    string name = 4;

    // Namespace defines the space within which name of the service account must be unique.
    string namespace = 5;

    // An opaque value that represents the internal version of this service account that can be used by clients to determine when service account has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    string resource_version = 6 [json_name = "resource_version"];

    // The unique in time and space value for this service account. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    string uid = 7;
  }
}

// KubernetesServiceV1 version is 0
message KubernetesServiceV1 {
  string id = 1;

  // Spec defines the behavior of a service. https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
  repeated Spec spec = 2;

  repeated Status status = 3;

  Metadata metadata = 4;

  map<string, string> for_each = 5 [json_name = "for_each"];

  repeated string depends_on = 6 [json_name = "depends_on"];

  int32 count = 7;

  string provider = 8;

  terraform.v1.Lifecycle lifecycle = 9;

  message Spec {
    // allocate_load_balancer_node_ports: bool
    bool allocate_load_balancer_node_ports = 1 [json_name = "allocate_load_balancer_node_ports"];

    // cluster_ip: string
    string cluster_ip = 2 [json_name = "cluster_ip"];

    // cluster_ips: list of string
    repeated string cluster_ips = 3 [json_name = "cluster_ips"];

    // external_ips: set of string
    repeated string external_ips = 4 [json_name = "external_ips"];

    // external_name: string
    string external_name = 5 [json_name = "external_name"];

    // external_traffic_policy: string
    string external_traffic_policy = 6 [json_name = "external_traffic_policy"];

    // health_check_node_port: number
    int64 health_check_node_port = 7 [json_name = "health_check_node_port"];

    // internal_traffic_policy: string
    string internal_traffic_policy = 8 [json_name = "internal_traffic_policy"];

    // ip_families: list of string
    repeated string ip_families = 9 [json_name = "ip_families"];

    // ip_family_policy: string
    string ip_family_policy = 10 [json_name = "ip_family_policy"];

    // load_balancer_class: string
    string load_balancer_class = 11 [json_name = "load_balancer_class"];

    // load_balancer_ip: string
    string load_balancer_ip = 12 [json_name = "load_balancer_ip"];

    // load_balancer_source_ranges: set of string
    repeated string load_balancer_source_ranges = 13 [json_name = "load_balancer_source_ranges"];

    // port: list of object
    repeated Port port = 14;

    // publish_not_ready_addresses: bool
    bool publish_not_ready_addresses = 15 [json_name = "publish_not_ready_addresses"];

    // selector: map of string
    map<string, string> selector = 16;

    // session_affinity: string
    string session_affinity = 17 [json_name = "session_affinity"];

    // session_affinity_config: list of object
    repeated SessionAffinityConfig session_affinity_config = 18 [json_name = "session_affinity_config"];

    // type: string
    string type = 19;

    message Port {
      // app_protocol: string
      string app_protocol = 1 [json_name = "app_protocol"];

      // name: string
      string name = 2;

      // node_port: number
      int64 node_port = 3 [json_name = "node_port"];

      // port: number
      int64 port = 4;

      // protocol: string
      string protocol = 5;

      // target_port: string
      string target_port = 6 [json_name = "target_port"];
    }

    message SessionAffinityConfig {
      // client_ip: list of object
      repeated ClientIp client_ip = 1 [json_name = "client_ip"];

      message ClientIp {
        // timeout_seconds: number
        int64 timeout_seconds = 1 [json_name = "timeout_seconds"];
      }
    }
  }

  message Status {
    // load_balancer: list of object
    repeated LoadBalancer load_balancer = 1 [json_name = "load_balancer"];

    message LoadBalancer {
      // ingress: list of object
      repeated Ingress ingress = 1;

      message Ingress {
        // hostname: string
        string hostname = 1;

        // ip: string
        string ip = 2;
      }
    }
  }

  message Metadata {
    // An unstructured key value map stored with the service that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
    map<string, string> annotations = 1;

    // A sequence number representing a specific generation of the desired state.
    int64 generation = 2;

    // Map of string keys and values that can be used to organize and categorize (scope and select) the service. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    map<string, string> labels = 3;

    // Name of the service, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    string name = 4;

    // Namespace defines the space within which name of the service must be unique.
    string namespace = 5;

    // An opaque value that represents the internal version of this service that can be used by clients to determine when service has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    string resource_version = 6 [json_name = "resource_version"];

    // The unique in time and space value for this service. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    string uid = 7;
  }
}
