syntax = "proto3";

// Provider: kubernetes 2.20.0
package terraform.kubernetes.datasources.v2;

import "terraform/v1/meta.proto";

// KubernetesEndpointsV1 version is 0
message KubernetesEndpointsV1 {
  string id = 1;

  Metadata metadata = 2;

  repeated Subset subset = 3;

  map<string, string> for_each = 4 [json_name = "for_each"];

  repeated string depends_on = 5 [json_name = "depends_on"];

  int32 count = 6;

  string provider = 7;

  terraform.v1.Lifecycle lifecycle = 8;

  message Metadata {
    // An unstructured key value map stored with the endpoints that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
    map<string, string> annotations = 1;

    // Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency
    string generate_name = 2 [json_name = "generate_name"];

    // A sequence number representing a specific generation of the desired state.
    int64 generation = 3;

    // Map of string keys and values that can be used to organize and categorize (scope and select) the endpoints. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    map<string, string> labels = 4;

    // Name of the endpoints, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    string name = 5;

    // Namespace defines the space within which name of the endpoints must be unique.
    string namespace = 6;

    // An opaque value that represents the internal version of this endpoints that can be used by clients to determine when endpoints has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    string resource_version = 7 [json_name = "resource_version"];

    // The unique in time and space value for this endpoints. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    string uid = 8;
  }

  message Subset {
    repeated Address address = 1;

    repeated NotReadyAddress not_ready_address = 2 [json_name = "not_ready_address"];

    repeated Port port = 3;

    message Address {
      // The Hostname of this endpoint.
      string hostname = 1;

      // The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24).
      string ip = 2;

      // Node hosting this endpoint. This can be used to determine endpoints local to a node.
      string node_name = 3 [json_name = "node_name"];
    }

    message NotReadyAddress {
      // The Hostname of this endpoint.
      string hostname = 1;

      // The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24).
      string ip = 2;

      // Node hosting this endpoint. This can be used to determine endpoints local to a node.
      string node_name = 3 [json_name = "node_name"];
    }

    message Port {
      // The name of this port within the endpoint. Must be a DNS_LABEL. Optional if only one Port is defined on this endpoint.
      string name = 1;

      // The port that will be exposed by this endpoint.
      int64 port = 2;

      // The IP protocol for this port. Supports `TCP` and `UDP`. Default is `TCP`.
      string protocol = 3;
    }
  }
}
